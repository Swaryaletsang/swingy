=> start and fully set up a new java project using the Maven build tool (learn Maven and its uses)
=> Dependencies that I might use NB: POM.xml
    ->javax.validation 
    -> lombok annotation
    -> hibernate validator from javax validator
    -> slf4j-api and slf4j-simple
=> MVC DESIGN PATTERN
=> BUILDER DESIGN PATTERN

==> Javax.swingy library * (learn and use)

You need to implement a text-based RPG based on the gameplay and conditions described below.
The program needs to follow the Model-View-Controller architecture 
and allows witching between the console view and GUI view.

# USE THE BUILDER DESIGN PATTERN TO CREATE HEROs and VILLAINS
# MVC:
    Model - holds data passed at the view and does all the functions and returns
    View - recieves data and returns data (interface SWINGY)
    Controller - connects the M & V acts as the caller for both (call the Controller in the main)
# dependencies are searched from mvn repo.com copy paste in POM then use them (easy as ABC) NB: learn
  how to utilise a specific dependency

# last but  not least (Javax.swingy library)

# Finally implement the RPG gameplay

***THIS PROJECT IS ACTUALLY A CRUD WITHOUT THE DELETE (use mysql database)********

****VARIABLES******
•Hero name (String)
•Hero class (String)
•Level (number)
•Experience (number)
•Attack (String)
•Defense (String)
•Hit Points {NOT INCLUDED}

copy RyiSnow youtubers game 
NB=>focus on GUI until its finished
check slack for answers to question I asked yesterday

lombok => helps with boiler plate code e.g getters and setters etc
javax.validation => helps with simple validations e.g to check if string is null (@NotNull)


1 Creation GUI
  name
  weapon
  armor